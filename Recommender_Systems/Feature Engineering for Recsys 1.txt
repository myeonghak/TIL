[recsys 2020 Tutorial-Feature  Engineering for recsys -1]



1. FE는 어떤 모델을 사용하든 중요함.

2.이 과정을 빠르고 효율적으로 수행하기 위해 GPU 자원을 활용하는 cuDF를 썼음.

3.피처 엔지니어링 전에, 데이터 전처리를 해야함. 먼저 결측 처리부터 살펴봄

4.결측 범주형 데이터를 “Unknown”으로 인코딩! 결측이 발생하는 패턴 역시 학습할 수 있다는 점에서 바람직한 방식인듯 함

5.수치형 변수는 평균이나 중앙값을 쓰는데, 이 때 특정 그룹마다 구분할 수 있으면 조금 더 정밀한 접근이 될 것임
	가령 상품의 경우 카테고리를 활용함. 
	(만일 카테고리 내부의 분산이 상품 전체의 분산보다 작다면 (아마 대개 그렇겠지만) 이러한 방법이 유효할 것 같음(내 생각))

6.결측치에 NA_price와 같은 방식으로 결측을 채워준 샘플에는 바이너리로 표시해주면 모델이 참고해서 학습할 것

7.Combining Categories
	피처를 조합함으로써 새로운 카테고리를 만들어내는 간단하고 강력한 기법. 예측력이 전혀 없는 변수를 조합해서 아주 예측력이 강한 변수를 만들어 낼 수 있음을 예시로 보임.
	- 가능한 조합을 다 하지 않는 이유? (연산상의 문제도 있겠지만) 각각의 유니크한 조합의 피처를 갖게되는 샘플의 수가 매우 작아지므로 일반화를 위한 패턴을 찾아내기가 힘들어짐.
	-> 따라서 EDA를 통해 유용한 패턴을 찾아내는 것이 필요(여기서 도메인이 중요하겠지)

8.Categorify
	str 등의 다른 자료형을 갖는 칼럼을 정수형으로 바꿔줌(factorize)
	- 메모리 절약 가능 (해쉬 스트링 등의 형태 1천만 행을 0-c까지의 정수로 factorize하면 0.9% 수준으로 압축)
	- 한번만 등장하는 고객을 새로운 범주로 할당하는 등의 방법을 적용할 수 있음.
	- 이렇게 빈도 낮은 샘플을 그룹핑해줌으로써 오버피팅을 막을 수 있음!

9.Target encoding
	발표자의 최애라고 함. ㅋㅋ
	범주형 데이터가 있으면, 각 범주마다 그룹바이를 취해주는데, 이 때 그룹마다 “타겟(y value)”의 비율 등을 구해줌. 이 새로 구한 값을 각 범주에 붙여주어, 새로운 피처로 활용!
	나아가 범주+다른 범주의 조합을 기준으로 삼아 새로운 비율을 구할수도 있음(남성+큭정 브랜드)
	- 수치형 변수를 만들어준셈이므로 모든 모델에서 활용가능하고, 타겟 패턴을 직접 입력한다는 점에서 매우 강력
	- 그러나 오버피팅이 쉽다는 점을 조심해야함. 매우 적은 빈도로 등장하는 카테고리의 경우 1번의 구매로도 1이라는 높은 값이 나오거나, 반대의 경우가 생기기 때문
	- smoothing: 따라서 스무딩을 해줘야함. 특정 횟수를 파라미터로 놓고, 이 횟수 이하인 범주는 global mean을 써줌
	- test 셋에서는 train 셋에서 구한 값을 concat해서 활용함. 
	-k-fold target encoding: 이를 검증하기 위해(test set에서의 target 분포가 train과 다를 수 있으므로) train을 가령 5 fold로 쪼개어 4 fold를 사용한 평균으로 5번째 fold의 target encoding을 해주어 테스트.

10.Count Encoding
	- 특정 범주형 변수가 데이터셋에서 등장하는 횟수를 인코딩하여 피처로 활용함
	- 이를 통해 해당 범주가 희귀한지, 혹은 인기있는지를 모델에 알려줄 수 있음