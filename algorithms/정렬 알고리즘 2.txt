 정렬알고리즘

1.	중요한 이유: 효율적인 탐색을 도와줌. 특히 이진탐색을 가능하게 해줌.
2.	버블소트(bubble sort): 
	두 개씩 비교하며, 가장 큰 것을 오른쪽으로 swap하며 정렬
	worst/avg/best complexity: n^2/n^2/n
	
3.	셀렉션소트(selection sort): 
	가장 작은 숫자를 차례대로 탐색, 가장 작은 숫자를 찾으면 가장 왼쪽 자리로 스왑. 가장 작은 숫자를 “선택”한다고 해서 선택정렬임.
	worst/avg/best complexity: n^2/n^2/n^2
	
4.	인설션소트(insertion sort): 
	정렬된 작은 어레이를 관리하며 정렬하는 방법. 새로운 수가 들어오면 그 안에서 서열정리를 다시 한다고 보면 된다.(소대 내 전출 온 인원 서열정리)
	worst/avg/best: n^2/n^2/n^2
	
5.	머지소트(merge sort): 
	분할과정과 정복과정으로 나뉘어 짐. 모든 숫자를 독립적으로 분할하고(반으로 나누어 줌), 그룹별로 엘레멘트의 크기를 비교해 하나의 그룹으로 병합. 이 모든 과정을 재귀적으로 처리함
	worst/avg/best: nlogn/nlogn/nlogn
6.	퀵소트(quick sort): 
	역시 재귀적으로 이루어짐. 피벗을 기준으로 배열을 쪼갬. 피벗 하나의 위치를 확정하여, 좌측은 더 작은 값들만, 우측은 더 큰 값들만 들어가는 partition 파트를 재귀적으로 반복함.
	worst/avg/best: n^2/nlogn/nlogn