비동기 프로그래밍

	1.	동기 프로그래밍(Synchronous programming) :
		여러 작업을 동시에 수행할 때, 한 작업이 끝난 이후에 다른 작업을 수행하는 방식
		
	2.	비동기프로그래밍(Asynchronous programming):
		반대로, 한 작업을 수행한 뒤 수행자가 처리하는 동안 다른 쓰레드가 다음 작업의 처리를 시작하는 방식. 멀티태스킹이라고 이해하면 됨. 

	3.	callback: 미리 실행해 놓은 작업이 마무리될 경우 실행하는 작업.
	
	4.	자바스크립트 비동기 방식의 작동 예시
		- 자바스크립트는 싱글쓰레드만을 지원함.
		- 자바스크립트 엔진 외에 webAPI가 따로 사용되는데, 여기에서는 타이머를 사용하거나 AJAX로 http 요청을 보내거나, 파일에서 데이터를 읽어 오는 등의 시간을 요소하는 작업을 수행함.
		- 이제 비동기방식으로 처리할 작업이 들어오면 node.js나 브라우저에서 운영하는 비동기 처리소로 전달, 작업이 끝나면 callback을 task queue에 전달함. 이벤트루프가 돌면서 callback 함수들을 자바스크립트 엔진에 전달 
		
	5.	promise: ES7부터 도입된 것으로, 중첩된 콜백으로 인해 디버깅이 복잡해지는 것을 개선하기 위해 then 명령어로 chaining방식으로 비동기 프로그래밍을 처리함
	
	6.	await/async 이런 비동기 작업을 좀 더 쉽게 처리하도록 도와줌.