https란?

	1.	Hyper Text Transfer Protocol Secure의 약자로, 기존의 http보다 더 강화된 보안이 특징임. 
	2.	이 때 보안은 두가지로 이루어짐.
		1) 유저의 정보 보안: http의 경우 유저가 서버에 전송하는 정보를 그대로 조회할 수 있음.
		2) 신뢰할 수 있는 사이트인지 알려줌: 다른 피싱 사이트인지 아닌지 판별
		
	3.	대칭키 방식: 암호화 방식과 복호화 방식을 공유함. 그러나 이 방식은 한번은 서버에서 키를 유저에게 전달해야 하는데, 그 과정에서 탈취당할 수 있다는 한계가 있음.
	
	4.	비대칭키 방식: “공개키”라고 주로 불림. 서버는 개인키를 보관하고, 유저들에게는 공개키를 배포함. 유저의 정보는 공개키로 암호화되어, 개인키로만 복호화될 수 있음.
		동시에 2)번 요소도 해결함. 서버에서 개인키로 암호화한 정보는 서버에서 발급한 공개키로만 복호화됨. 
		만약 피싱사이트에서 전송한 정보를 유저가 받으면 원래 서버에서 제공하는 공개키로 복호화되지 않기 때문에 신뢰할 수 없는 정보로 간주할 수 있음.
		
	5.	비대칭키 방식에서, 공개키가 믿을 수 있는 공개키인지를 인증해주는 공인 민간기업이 있음. 이들을 CA(Certificate Authority)라고 부름. 이들의 목록은 브라우저에 내장되어 있음.
	
	6.	handshake: 클라이언트와 서버가 서로 신뢰할 수 있는지를 확인하는 절차. 
		클라이언트가 랜덤데이터를 전송, 서버는 서버측에서 생성한 랜덤 데이터와 해당 서버의 인증서를 보냄. (이것이 악수)
		
		클라이언트는 이 인증서가 진짜인지, 브라우저에 내재된 CA들의 정보로 통해 비대칭키 시스템을 사용해 확인하게 됨.
		CA의 인증을 받은 인증서들은 해당 CA의 개인키로 암호화되어 있음. 
		만약 서버에서 전달한 정보가 진짜라면, 브라우저에 저장된 CA의 공개키로 복호화할 수 있을 것.
		이 공개키로 복호화될 수 있는 인증서를 발급할 수 있는 것은 그에 대응하는 개인키를 가진 CA뿐이기 때문.
		
		성공적으로 복호화된 인증서에는 서버의 공개키가 담겨 있음.
		
	7. 이 이후에, 비대칭키 방식과 대칭키 방식을 혼합하여 통신하게 됨.
		비대칭키의 암호화 복호화는 컴퓨터에 큰 부담을 주기 때문에, 비대칭키로 모두 일일이 전송하는 데는 무리가 있음.
		
		데이터 탈취의 위험을 제거하기 위해,
		대칭키 방식으로 통신하기 위한 키를 비대칭키 방식으로 전달함.
		
		일전의 handshake 과정에서 전달받은 데이터를 가지고 임시키를 만들고, 서버의 공개키로 암호화시켜 서버로 전달.
		양쪽에서 일련의 과정을 통해 대칭키를 만듦, 이 이후의 교환되는 데이터는 이 대칭키로 암호화되므로 탈취의 가능성을 차단할 수 있음.
		
		
		
	