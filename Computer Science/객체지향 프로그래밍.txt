객체지향 프로그래밍

전교생(리소스)에게 청소를 시키는 예시 떠올리기! 
일일이 명령을 내려주기 보다는, 클래스(직업)을 정의함으로써 전문적인 역할을 부여함. 
클래스를 받으면 기본템(어트리뷰트)이 주어지고, 직업별 스킬(메소드)가 각각 정의됨.

절차적 프로그래밍에서의 순서대로 명령을 내리거나 (루틴) 함수 등을 사용하는 방식으로 처리하면 전교생에게 명령 내리기 힘듦. 
이걸 보완하기 위해 객체를 정의.

	1.	프로그래밍 패러다임의 하나. 프로그램을 명령어의 집합이 아닌 객체의 모임으로 파악하고자 하는 접근.
	2.	프로그램의 유연한 개발과 변경을 가능하게 하므로, 대규모 소프트웨어 개발에 많이 사용됨.
	3.	지나친 객체화는 실제 세계의 경향을 잘 반영하지 못한다는 지적을 받기도 함.
	4.	객체마다 어트리뷰트와 메소드를 정의함으로써 같은 기능을 수행하는 프로그램을 쉽게 관리할 수 있으며, 상속(오버라이드)을 통해 객체를 쉽게 수정하여 만들 수 있음
	5.	절차적 프로그래밍과 상반된 개념이 아니라, 포함하기도 하며 공존하기도 하는 개념임.