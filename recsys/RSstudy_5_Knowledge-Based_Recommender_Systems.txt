[Knowledge-Based Recommender Systems]

5.1 Introduction
	1) Content-based 및 CF 모델은 상당한 양의 과거 구매 기록 혹은 평점 기록을 요구함.
	-> 데이터가 부족할 경우, 성능이 떨어지거나 전체 user-item 조합의 전체 스펙트럼에 대해 전부 커버하지 못함.
	
	2) 이러한 문제를 cold-start 문제라고 함.
	시스템마다 이러한 문제에 대한 민감성이 다름.
	(CF 시스템은 가장 민감함. 신규 유저와 아이템 모두에 잘 다루지 못함. CB 시스템은 새로운 아이템은 다소 잘 다루지만, 새로운 유저에 대해 잘 대응하지 못함.)
	
	3) 또한 이러한 시스템(CF, CB)들은 상품이 고도로 맞춤화(customized)된 도메인의 경우 대체로 적합하지 않음.
	(ex. 부동산, 자동차, 관광 상품, 재무상품, 사치품 등.)
	-> 이러한 상품은 자주 구매되지 않으므로 평점이나 구매기록이 부족할 수밖에 없고, 제품의 도메인이 복잡할 수 있으며,
	특정 제품 성질을 갖는 비슷한 상품이 적음. 더욱이 과거 평점이 현재의 기호를 반영한다고 보기도 힘듦.
	
	4) Knowledge-Based recsys는 상품에 대해 고객의 요구사항을 표면적으로 요구하는 방식에 의존한다.
	
	5) 그러나 고객에게 조차 요구사항을 말하거나, 어떤 상품이 그 요구사항에 가능할지 이해하기도 어려움.
	따라서 이러한 system은 유저의 interactive한 feedback을 사용함. 이는 복잡한 제품 공간을 탐험하게 하고, 다양한 옵션간의 상충하는 성질들을 배우게끔 유도함.
	
	6) 검색과 탐색 과정은 제품 도메인의 다양한 피처들간의 trade-off, 효익을 묘사하는 지식 기반에 의해 활용될 수 있음.
	
	7) 여기서 지식 기반(knowledge bases)은 효과적인 검색과 탐색에 매우 중요하기 때문에, 이러한 시스템을 knowledge based recommender system이라 부름.

	
	8) 이러한 KB 시스템은 정기적으로 구매되지 않는 제품을 추천할 때 아주 적합함. 또한 이러한 도메인에서는, 유저들은 일반적으로 그들의 요구사항을 명백히 드러내는 경향이 있음.
	
	9) 일반적으로 KB가 적합한 상황
		1. 유저가 그들의 요구사항을 명백하게 상술하기를 바랄 경우
			-> 따라서 상호작용 친화성이 이러한 시스템의 매우 중요한 부분임. CB나 CF는 이러한 상술된 feedback을 허용하지 않음.
		2. 특정 상품의 평점을 얻기 어려움. 상당한 제품 도메인의 복잡도에 기인함.
		3. 평점이 시간에 민감한 속성을 가짐 (e.g. 컴퓨터) 구형 차량 혹은 컴퓨터에 대한 평점은 유용하지 않음.
		
	10) KB를 CB/CF와 구별짓는 중요한 속성은 KB는 특정 분야에 대한 높은 수준의 customization임.
		이러한 customization은 유관한 도메인 지식을 유사도 혹은 제약 측도의 형태로 encoding하여 사용함으로 얻어낼 수 있음.
		상품 정보뿐만 아니라 유저 정보도 활용해 도메인에 특화된 속성을 만들어낼 수 있음.
		그러나 이러한 속성은 KB 시스템에 범용적인 것이 아니라, 유저의 요구사항에 특화되어 있음.
		
	11) KB 추천 시스템에는 두가지 주된 타입이 있음.
		1. 제약 기반 추천 시스템(constraint-based Recsys): 
			이러한 시스템에서, 유저는 요구사항 혹은 제약사항을 상술함. (e.g., 어떤 특성의 상한 혹은 하한)
			여기에 도메인 특화된 규칙들이 유저의 요구사항을 맞추기 위해 추가적으로 적용됨.
			이 규칙은 제약으로 작용하여, 추천할 상품을 filtering함.
			
		2. 사례 기반 추천 시스템(case-based Recsys):
			이러한 시스템에서, 유저는 특정 사례/표본들을 특정지어주고, 이는 목표 혹은 중점 고려사항으로 확용됨.
			유사도 기반으로 이 사례들과 유사한 상품들을 검색하고 제공해줌.
			따라서, 유사도 척도가 시스템 내부에서 사용될 도메인 지식을 형성함.
	
	12) 시스템은 유저가 상술한 요구사항을 수정하도록 여지를 제공함. 이러한 방식으로 유저가 궁극적으로 원하는 상품을 찾아내도록 유도함.
		그러나 이를 유도하는 방식이 위의 두 KB 시스템에서 차이를 보임. 
	
	13) 유저와 시스템의 상호작용은 크게 세가지로 분류됨.
		1. 대화 시스템(Conversational systems): 
			feedback loop의 맥락에서 유저 선호가 결정됨. 이는 도메인 영역이 복잡하고, 반복적인 대화 형식의 맥락에서만 결정될 수 있을 때 사용됨.
		2. 탐색 기반 시스템(Search-based systems): 
			이미 정리된 일련의 질문에 의해 유저의 선호가 명시됨.
		3. 네비게이션 기반 추천(Navigation-based recommendation):
			현재 추천된 아이템에 대해 수정 요청사항을 유저가 제공함. 반복적인 요청 변경을 통해, 유저가 원하는 제품에 도달할 수 있게 됨.
			
	
	
	
constraint-based recsys

	compatibility condition: 인원을 정해주면 방의 크기를 정해준다는 등의 방식으로 상품을 고객의 상황에 맞게 조정
	
	
case-based recsys
	
	critique method: 유저가 좋아하지 않은 상품이 나왔을 때 어떻게 대처할지?
		1) simple critique: 기존 feature중 하나만 바꿔 가지고 classification 수행
			장점 -> 추천이 명확하고 직관적임, 유저에게 어필 가능
			단점 -> laborious navigation(조건이 더 길어지고, 다른 피처에 대해 통제력이 떨어짐.. 원래 원하는 추천에서 멀어질 수 있음)
		2) compound critique: 여러 feature를 혼합하여 수행
		3) dynamic critique: 유저들이 빈번하게 바꾸는 조합을 활용.
		
	
	
	
susceptibility 민감성
paucity 소량, 결핍
solicit 간청하다, 요구하다, 호객하다
enunciate 밝히다

