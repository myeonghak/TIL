t-SNE (t-Distributed Stochastic Neighbor Embedding)

(복습 파트)

1. 각 포인트를 중심으로 정규분포 그래프를 그리고, 다른 포인트에 대해 유사도를 구함. 이 때, 유사도는 정규분포를 가정했을 때 확률값을 사용함.

2. 이 확률값을 모두 더했을 때 1이 나오도록 표준화해줌. 이는 넓게 흩어진 데이터와 모여있는 데이터 간의 유사도를 ‘동일하게’ 간주하기 위함

3. 이렇게 유사도 계산을 마침. 이 때, A->B와 B->A의 유사도는 각각 다를것임. 분포의 모수가 다르기 때문임. 이 경우 단순히 평균쳐서 거리처럼 간주함

4. 계산을 마치면 유사도 행렬이 구해진다. 자기 자신과의 유사도는 0.

5. 그 뒤 모든 포인트를 numberline에 뿌려 놓는다. 그리고 기존처럼 포인트간의 거리를 계산하고, 유사도 행렬을 그림.

6. 이때 유사도를 구할때는 t분포를 사용

7. 이 모양에 맞게 바꿔끼우며 끝까지 정리함



(t-SNE 첫 노트)

1. 차원 축소에 쓰이는 대표적인 알고리즘으로, 시각화에 용이하게 쓰임.

2. 각 데이터 포인트 주변으로 유사도를 구해 클러스터를 만듦. 관심 데이터 포인트를 하나 잡고, 그 값을 평균으로 갖는 정규분포그래프를 그림. 
주변의 데이터의 경우(같은 클러스터) 유사도가 높게 나오고, (정규분포의 확률값) 먼 데이터는 유사도가 낮음.

3. 모든 데이터 포인트에 대한 유사도를 그려, 상관계수그래프처럼 주욱 나열함. 같은 클러스터는 높은 유사도를 지님

4. 그 뒤 임의로 낮은 차원으로 데이터 포인트를 사영시키고, 데이터마다 유사도를 계산함.(정규 분포로 했듯이) 그러나 여기선 t분포를 대신 사용하는데, 그래서 t-sne임.

5. 데이터 포인트 사이의 거리를 모두 구하면, 처음에 구한 상관계수그래프같은 그림이 안나옴. 따라서 그와 유사한 형태로 바꿔주는 작업을 수행함

6. 그 작업은 한번에 안되고, 한번에 한 이동을 수행함(그래서 느린가봄)

19.12.14