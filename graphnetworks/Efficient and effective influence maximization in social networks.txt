Efficient and effective Influence Maximization in Social Networks

Background
	- social network: 개인과 그들의 관계로 구성된 그래프로, 정보 파급에 핵심적인 역할을 수행함
	- viral marketing strategy: 개인의 부분집합에게 제품을 수용하도록 설득하여, 추후에 더 많은 개인들이 제품을 수용할 수 있도록 유도하는 것

1.Influence Maximization(IM)
	: 그래프 G(V,E)와 예산 k개 주어졌을 때, 그래프 G에 걸친 영향력을 최대화할 수 있는 k개의 seed 집합을 찾는 것
	- k seed set: 제품을 수용하고 영향력 전파를 시작하는 k명의 개인(즉, node)
	- seed set S의 영향력 전파, sigma(S)
	: S에 의해 전파된 정보를 수용한 유저의 수. 이를 추정하기 위해서는, 정보가 어떻게 전파되는지에 대해 묘사하는 모델이 필요함

2.Diffusion model
	- 네트워크에 걸쳐 어떻게 영향력이 전파되는지에 대해 묘사하는 모델.
	- 유명한 모델로는 linear threshold(LT) model, Independent cascade(IC) model 두가지가 있음.

3.두 모델의 공통적인 가정
	- 두 모델의 노드들은 active 혹은 inactive 상태만을 갖는다.
	- active: 정보를 수용한 유저
	- inactive: 정보를 수용하지 않은 유저
	- inactive한 유저가 active해질 수는 있지만, 그 반대는 불가능

4.Linear Threshold model
	- 각 노드는 0-1 사이의 균등분포에서 무작위로 선택한 threshold를 가짐. 
	- active한 이웃들의 전체 weight가 해당 노드의 threshold보다 높으면 해당 노드가 active됨.
	- 더이상 active node가 추가되지 않으면 중지

5.Independent Cascade(IC)
	- 확률시행만으로 active node을 판단함
	- 각 시행은 독립
	- 더 이상 추가적인 active node가 생겨나지 않을 때까지 시행

6.몬테카를로 시뮬레이션 (MC simulation)
	- 무수히 많은 (10,000 이상) 시행을 평균 냄으로써 최종 결과값을 얻음

7.IM 문제의 optimal solution
	- n개 노드를 갖는 네트워크에서, nCk를 구해야 진짜 최대값을 찾을 수 있으나 이는 NP-hard 문제임.
	- 따라서 한번에 구하는 것이 아닌, 하나씩 하나씩 추가해 나가며 greedy한 방식으로 찾게 됨
	- 최대의 marginal gain을 얻는 노드를 seed 집합에 추가하게 됨.
	- 즉, 노드를 추가함으로써 얻게되는 추가적인 influence spread가 가장 큰 노드를 추가함. 
	- 이 때 influence spread는 MC로 추정함.
	- 이러한 SimpleGreedy 방식은 최적 해의 63% 이상의 값을 보장함.

8.Performance issues of SimpleGreedy
	- macro-level issue: 매 step마다 seed가 아닌 모든 노드의 marginal gain을 다시 구해야 함. 이는 각 time step마다 seed set의 구성이 달라짐에 따라 다시 marginal gain을 구해야 함.
	- micro-level issue: 매 MC 시뮬레이션마다 오직 한개의 노드만의 marginal gain을 추정함. 이는 매우 시간 소요가 큼.

9.macro-level issue 해결방안 - Cost Efficient Lazy Forward, CELF
	- CELF의 목적: Influence spread function의 submodularity 특성을 활용
	- submodularity: S가 T의 부분집합일 때, S의 marginal gain은 T의 그것보다 작거나 같다.
	- seed 집합이 작을 때는 내가 들어갔을 때의 marginal gain에 공헌하는 것이 크지만,  그렇지 않을 때는 작다.
	- 이를 활용해, 특정 노드의 marginal gain이 재계산 되면 그 아래에 있는 mg 값들은 자동으로 이보다 기껏해야 같은 양이므로, 이 아래는 계산하지 않고 넘어갈 수 있음.
	- 이로써 정확도 손실은 전혀 없게 속도를 높일 수 있음

10.macro-level issue 해결방안 2 - Community Based IM(CB-IM)
	- 같은 커뮤니티 내에 속해있는 유저들(i.e. intra)은 서로 tightly 묶여있고, actively 정보를 주고 받음
	- 다른 커뮤니티 간의 유저들은 (i.e. inter) 서로 loosely 묶여 있고, rarely 정보를 교환함.
	- 이를 통해. 다음을 도출 가능
	: 한 노드의 커뮤니티 내 Information Spread는, 전체 네트워크 내의 Information Spread와 큰 차이가 없다!
	- 따라서 새로운 seed가 설정되면, 같은 커뮤니티 내의 노드들만 re-evaluated 될 것이고, 다른 노드들은 새로운 seed에 의해 영향을 받지 않을 것임. 
	- 이 특성을 활용해, re-evaluate할 노드의 수를 줄일 수 있음.

11.micro-level issue 해결 방안 - Path Based IM (PB-IM)
	- MC 시뮬레이션을 path based 추정으로 대체하는 것.
	- 한 노드의 Information spread가 해당 노드로부터의 simple path를 aggregate함으로써 추정됨.
	- 비싼 MC 방식에 비해 효율적으로 추정 가능

12.motivation
	- 앞의 CB-IM과 PB-IM을 결합해서 모두의 이점을 취하려고 함.
	- 그러나 단순히 합치면 정확도 측면에서의 손실이 발생.
	- 크게 두가지의 문제점이 발생
	   1. 커뮤니티를 더 정밀하게 detection하는 문제
	   2. 커뮤니티 기반의 seed를 선출하는 과정에서 단순히 CELF를 쓰는 것보다 효율적으로 수행하는 문제

13.Hybrid-IM
	- CB-IM과 PB-IM을 결합하여 macro, micro level 모두의 문제점을 해결하는 접근
	- seed set의 Information Spread를 보존하며 성능을 크게 개선
	- 두 접근 전략을 취함.
	   1. Path-Based Community Detection (PB-CD)
	   2. Global CELF (G-CELF) 알고리즘

14.개요
	- Community Detection stage: 커뮤니티의 구조적인 특성을 활용하기 위해, 커뮤니티를 먼저 검출해내는 단계
	- Seed Selection stage: 검출한 커뮤니티를 기반으로 k개의 seed set을 생성하는 단계

15.기술적 문제 (1) - 커뮤니티 검출
	- macro level의 성능 개선을 위해 커뮤니티를 검출하여 이를 기반으로 seed set을 만드는데, 여기에는 노드의 커뮤니티 내 Information Spread와 전체 네트워크 내 IS와 유사하다는 전제가 있어야 함.
	- 그 두 IS가 유의미하게 달라버린다면, seed set의 IS의 손실이 크게 됨.
	
	- 기존 CB-IM의 Community Detection: live edge를 제외한 엣지를 다 지워버림. 이 때, live edge는 가중치가 미리 결정된 threshold보다 큰 엣지들임. 이들의 영향력 전파만 가지고 커뮤니티를 검출하기 때문에, 정보 손실이 크다는 문제점. 심지어 모든 live edge의 영향력을 동일하게 간주함. 이래서 seed set의 IS의 성능이 안좋음.

16.전략 1 - Path based CD (Community Detection)
	- live edge만 쓰지 말고, 전부 다 사용해서 엣지와 가중치를 모두 살리자. 이렇게 함으로써 고품질의 CD를 수행할 수 있음.
	- 2개의 단계로 이루어 짐.
	    1. Unit Community Detection(UCD): 2 단계를 위한 작은 unit community를 검출
	    2. Community Merge(CM): UCD 이후 unit community를 병합하는 작업

17.기술적 문제 (2) - CELF를 더 효율적으로 사용하기
	- CB-IM에서의 CELF: 각 커뮤니티마다 local CELF queue를 할당, CELF 알고리즘이 각각 독립적으로 적용됨.
	- 그러나 옆의 커뮤니티의 노드를 참고하여 next seed selection 해준다면, 더 효율적일 것임. 기존의 방법에서 이루어진 불필요한 계산을 줄일 수 있음.

18.전략 2 - Global CELF(G-CELF)
	- Community Based Seed Selection을 위해 하나의 global한 queue만을 사용함. 
	- 이를 통해 Information Spread의 손실이 전혀 없이 훨씬 더 seed selection을 최적화할 수 있음.
	- queue가 한개이므로 추가적인 정보를 필요로 함.

19.

20.￼