Stanford cs224w - 2. properties of networks and random graph models

	1.	네트워크의 특성을 특징화(characterize)하는 방법을 배우고, 현실적인 네트워크를 생성하기 위해 사용할 수 있는 모델에는 무엇이 있는지를 배움.
	2.	그래프 특성 1 - 차수 분포(degree distribution): 각 노드의 차수가 몇인지, x축에는 차수의 수, y축에는 해당 차수의 수에 해당하는 노드의 개수를 갖는 분포를 표현
		- directed graph의 경우에는, in-degree/out-degree 분포가 따로 정의됨.
		- normalized histogram: 각각 차수의 노드를 전체 노드의 수 N으로 나누어 정규화해준 히스토그램.
		
	3.	그래프 특성 2 - 경로(Path in graphs)
		- 경로(path)란, 각 노드가 다음 노드에 연결된 일련의 노드임(a sequence of nodes in which each node is linked to the next one)
		- 스스로 교차할 수 있고, 한 엣지를 여러번 통과할 수 있음.
		
	4.	그래프 특성 3 - 거리(Distance in a graph)
		- 거리(shortest path, geodesic 지름길의): 노드들을 연결하는 최단 경로를 따라 놓인 엣지의 갯수를 노드간의 거리라고 함.
		- 연결되어 있지 않을 경우, 무한 혹은 0으로 정의됨.
		- 유방향 그래프의 경우, 화살표의 방향을 따라 경로가 결정되어야 함. 
			-> 그 결과, 유방향 그래프 내에서의 경로는 비대칭적임.
		- 가중 그래프의 경우, 가장 최소의 가중합을 갖는 경로가 최단 경로가 될 것임.
		
	5.	그래프 특성 4 - 지름(Network Diameter)
		- 그래프 내의 모든 노드 쌍의 최단 경로 중 가장 큰 값. 
		- 그러나 이 값은 robust 하지 않음(fragile) 하나의 기다란 촉수같은 경로가 존재하면, 실제 측정하고자 의도했던 네트워크의 지름보다 훨씬 큰 값이 나오게 될 것이기 때문.
		
		- 평균 경로 길이(average path length): 연결된 그래프(connected graph)/강하게 연결된 유방향 그래프(strongly connected directed graph)에서 사용됨.
		- 많은 경우, 연결된 노드 쌍의 최단 경로만을 계산함. 즉, 무한의 길이를 갖는 경로를 무시한다는 의미.
		
	6.	그래프 특성 5 - 군집 계수 (Clustering coefficient)
		- 사회과학에서 유래된 개념으로, 무방향 그래프에서만 정의됨.
		- 한 노드의 주변의 이웃들은 서로 얼마나 강하게 연결되어 있는가?에 대답하는 척도임.
		- 즉, 나 말고 다른 내 친구들끼리는 얼마나 친한지를 수치로 표현함.
		- 수치적으로 모든 가능한 주변 노드의 수 중, 친구끼리 연결된 경우의 수는 얼마나 되는가를 기준으로 구함.
		- 전체 네트워크의 평균 군집 계수는, 각 노드의 군집계수의 평균을 취해주면 구할 수 있음.
		- 만약 노드의 차수가 1,2일 경우 정의되지 않음.
		
	7.	그래프 특성 6 - 연결성(Connectivity)
		- 가장 큰 연결된 구성요소(connected component)의 크기, 즉 노드의 수. 
		- 두 꼭지점이 경로에 의해 연결될 수 있는 가장 큰 집합.
		
	8.	연결된 구성요소(connected component) 찾는 방법
		- 무작위의 노드에서 시작하여, BFS 수행
		- BFS가 방문한 노드를 라벨링함.
		- 모든 노드가 방문되면, 네트워크는 연결된 것임. 만약 방문되지 않은 노드가 존재하면, BFS를 반복함.
		
	9.	요약- 네트워크의 핵심 특성
		1. 차수의 분포: p(k)
		2. 경로의 길이: h
		3. 군집화 계수: C
		4. 연결된 구성요소: s
		
	10.	Erdös-Renyi Random Graph - 가장 간단한 형태의 그래프 모델
		- 2개의 변형이 존재함.
			1. G_np: 노드의 수가 n이고, 엣지가 i.i.d하게 p의 확률로 등장하는 무방향 그래프
			2. G_nm: 노드의 수가 n이고, m개의 엣지가 균일 확률로 랜덤으로 추출되는 무방향 그래프
			
	11.	차수 분포, 군집화 계수 of G_np
		- 차수분포: G_np의 차수 분포는 이항 분포를 따름. 이는 차수 k, 노드 수 n, 확률 p를 파라미터로 가짐.
		- 군집화계수: C_i=2*e_i/((k_i*(k_i-1))
		여기서 e_i는 노드 i의 이웃간의 노드의 수임. G_np의 엣지는 i.i.d하게 p의 확률로 등장함. 따라서 e_i의 기댓값은 p*k_i*(k_i-1)/2이며, 결국 E(C_i)는 p* (k_i*(k_i-1))/((k_i*(k_i-1))가 됨. 
		이는 p가 되고, 결국 k-bar/(n-1) = k-bar/n으로 근사됨
		- 따라서 랜덤 그래프의 군집화 계수는 작은 값을 가질 것임. 
		- 정리하자면, 랜덤 그래프의 차수분포는 이항 분포를 따르며, 군집화계수는 p=kbar/n의 값을 가짐.
		
	12.	경로 길이, 연결성 of G_np
		- 그래프 G(V, E)는 expansion alpha를 가짐. 만약 S가 V(꼭지점 집합)의 부분집합일 경우, S를 떠나는 엣지의 갯수는 alpha*min(|S|, |V\S|)임. 
			이때 |V\S|는 S가 아닌 V의 ‘크기’를 의미함. 우변의 오른쪽 끝 항은 S와 그 외의 꼭지점의 개수 중 작은 것을 취한다는 의미임. 이는 Expansion이라는 metric이 스스로 컨닝하는 것을 막기 위함임.
		- 이 값의 의미는, 만약 내가 S라는 것과 그 외의 노드로 그래프를 나누었을 때, 얼마나 많은 엣지들이 교차되고 교차되지 않는가를 의미함.
		- 랜덤 그래프에서는 이 값이 큰 것으로 증명됨. 즉 어느 부분집합을 만들어도 그 외의 것과 그 부분집합 사이에 교차하는 엣지가 많음을 의미.
		- 정리: n개의 노드와 alpha의 expansion을 가진 그래프에서, 모든 노드 쌍은 길이 O((log n)/alpha)의 경로를 가짐. 이 과정은 이진트리를 확장해 나가는 과정과 유사함. BFS로 모든 노드를 탐색함 (38:47)
	
	13.	MSN의 예시
		- ‘6단계를 넘으면 전세계 거의 모든 사람들이 연결됨’
	
	14.	논란
		- 확장(expansion)의 결과
		
		짧은 경로: O(log n)
		이는 일정한 차수를 유지할 경우 얻을 수 있는 가장 작은 지름이 됨.
		그러나 군집화 계수가 작아짐!
		즉, 지름이 작으면 군집화 계수도 작고, 지름이 크면 군집화 계수도 큼
		
		- 그러나 네트워크들은 “지역적인(local)” 구조를 가짐(특히 소셜네트워크)
		* 3인조 폐쇄(triadic closure): 친구의 친구 역시 나의 친구다! -> 이는 군집화 계수 역시 크다는 것을 의미함.
		- 둘 다 가질 수는 없나? 즉, 지름은 작게, 군집화는 크게 안되나? 된다!
	 	
	15.	Small world: how?
		- 높은 군집과 동시에 small world(지름 log n을 갖는 네트워크)를 이루는 것이 가능할까?
		- small world model(Watts-Strogatz ‘98)은 두가지 구성 요소로 이루어 짐.
		(1) 저차원의 정규적인 격자 (regular lattice)로 시작함. 이는 높은 군집화계수를 가짐.
		(2) rewire: 무작위성의 도입. 격자의 먼 부분들을 결합하기 위한 지름길을 만들기 위해, 엣지를 끊거나 더함. 각 엣지에 대해 확률 p로써 다른 한쪽 끝을 다른 노드로 옮겨버림.
		이 때 p가 0이면 고지름 고군집, 1이면 저지름 저군집이 됨. 그 사이에 어떤 적절한 지점에 저지름 고군집을 이룰 수 있다고 함.
		- 이는 대륙을 뛰어넘는 몇 몇 친구를 떠올릴 수 있음. 이들로 인해 두 지역적인 친구 네트워크가 지름은 작되 군집계수는 큰 하나의 네트워크로 합쳐지게 되는 것!
		- 그러나 이 모델은 차수 분포에 대해 아무런 말도 하지 않음.
		
	16.	재귀적 그래프 생성(Recursive Graph Generation)
		- 친구를 사귀는 방식이나 관계를 맺는 방식이 비슷한 것에서 알 수 있듯이, 그래프 안에는 비슷한 구조를 갖는sub-graph가 있을 것이라고 기대할 수 있음.
		- 직관: 자기 유사성 (self-similarity)
		- 한 객체는 그 객체의 일부분과 유사함. 즉, 한 객체 전체는 그 객체의 하나 혹은 그 이상의 일부분과 같은 구조를 갖고 있음.
		- initial graph에서 시작하여, recursive expansion으로 전체의 모습을 모사함.
		- 크로네커 곱(kronecker product)은 자기 유사 (self-similar) 행렬을 구하는 데 사용되는 방법임.
		
	17.	크로네커 그래프: 네트워크 구조의 재귀적인 모델
		- 시작 행렬 K_1에 크로네커 곱을 반복함으로써 크로네커 그래프를 얻을 수 있음:
		- 여러개의 시작행렬들에도 쉽게 적용할 수 있음. (사이즈가 다를 경우도 문제없음)
	18.	확률적 크로네커 그래프(Stochastic Kronecker Graph): 행렬의 입력값이 0/1로 주어지는 것이 아니라, 확률로써 주어짐. (총합이 1이 될 필요는 없음)
		- N_1*N_1 사이즈의 행렬 theta_1을 구해, k번째 크로네커 제곱을 구함(theta_k). 
		- 이 theta_k의 입력값 p_uv는 엣지(u,v)를 확률 p_uv로 가지게 됨. 이 확률값은, 해당 엣지가 “존재할 가능성”이 0-1이라는 말로, 0.2 값을 갖는 엣지라는 뜻이 아님.
		- 이 방법에는 문제가 있음. 실세계 그래프는 거대하고 희소함. 시간적/공간적 복잡도에서 문제가 발생함. 
		- 모든 원소에 곱하는 방식이 아닌, 4개의 구간(quadrant)으로 구획한 뒤 그 공간마다 각각의 확률을 곱해주는 방식, 그리고 그를 재귀적으로 반복하는 방식으로 수행)
		
		
		